<?php

namespace {%NAMESPACE%}\Contracts;

use Purposemedia\Authentication\Contracts\Contract;
use {%BLUEPRINT_NAMESPACE%}\{%BLUEPRINT_NAME%};
use {%MODEL_NAMESPACE%}\{%MODEL_NAME%};

class {%CONTRACT_NAME%} extends Contract implements {%BLUEPRINT_NAME%}
{

    /**
     * @var string
    */
    protected $paginationLength = 20;

    /**
     * {%CONTRACT_NAME%} Constructor
     * @param {%MODEL_NAME%} $model
    */
    public function __construct( {%MODEL_NAME%} $model )
    {
        parent::__construct( $model );
    }

    /**
     * @param $controller
     */
    public function index( $controller )
    {
        ${%PLURAL_VARIABLE%} = $this->model->paginate( $this->paginationLength );
        $controller->setLayoutView( view( '{%VIEW_PATH%}.index', compact( '{%PLURAL_VARIABLE%}' ) ) );
    }

    /**
     * @param $controller
     */
    public function showCreate( $controller )
    {
        $controller->setLayoutView( view( '{%VIEW_PATH%}.create' ) );
    }

    /**
     * @param $controller
     * @param $request
     */
    public function create( $controller, $request )
    {
        $this->model->create([

        ]);
        return $controller->success( 'Successfully created.' );
    }

    /**
     * @param $controller
     * @param {%ID_VARIABLE%}
     */
    public function showEdit( $controller, ${%ID_VARIABLE%} )
    {
        ${%SINGULAR_VARIABLE%} = $this->model->findOrFail( ${%ID_VARIABLE%} );
        $controller->setLayoutView( view( '{%VIEW_PATH%}.edit', compact( '{%SINGULAR_VARIABLE%}' ) ) );
    }

    /**
     * @param $controller
     * @param $request
     * @param {%ID_VARIABLE%}
     */
    public function edit( $controller, $request, ${%ID_VARIABLE%} )
    {
        ${%SINGULAR_VARIABLE%} = $this->model->findOrFail( ${%ID_VARIABLE%} );
        ${%SINGULAR_VARIABLE%}->update([

        ]);
        return $controller->success( 'Successfully updated.' );
    }

    /**
     * @param $controller
     * @param {%ID_VARIABLE%}
     */
    public function delete( $controller, ${%ID_VARIABLE%} )
    {
        $this->model->findOrFail( ${%ID_VARIABLE%} )->delete();
        return $controller->success( 'Successfully deleted.' );
    }

}
